// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Board Board renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Board
    activePlayer="playerX"
    playerO="Strawberry"
    playerX="Apple"
    toggleActivePlayer={[Function]}
    toggleGameOn={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          id="board"
        >
          <div
            className="row"
          >
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={0}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
            <div
              className="top-column"
            />
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={1}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
            <div
              className="top-column"
            />
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={2}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
          </div>
          <div
            className="board-row"
          />
          <div
            className="row"
            id="center-row"
          >
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={3}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
            <div
              className="middle-column"
            />
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={4}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
            <div
              className="middle-column"
            />
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={5}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
          </div>
          <div
            className="board-row"
          />
          <div
            className="row"
          >
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={6}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
            <div
              className="bottom-column"
            />
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={7}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
            <div
              className="bottom-column"
            />
            <Square
              activePlayer="playerX"
              clickMethod={[Function]}
              gameId={null}
              index={8}
              toggleActivePlayer={[Function]}
              value={null}
              winner={false}
            />
          </div>
        </div>,
        <div
          className="button"
        >
          <Button
            as="button"
            color="green"
            onClick={[Function]}
            value="reset"
          >
            Start
          </Button>
        </div>,
        <TransitionablePortal
          open={false}
          transition={
            Object {
              "animation": "scale",
              "duration": 400,
            }
          }
        >
          <Segment
            style={
              Object {
                "left": "42.5%",
                "position": "fixed",
                "textAlign": "center",
                "top": "40%",
                "zIndex": 1000,
              }
            }
          >
            <Header>
              <Icon
                as="i"
                name="hand peace"
              />
              Strawberry
               wins!
            </Header>
            <div>
              <p>
                Why not play another round?
              </p>
              <p>
                Hit the reset button to play another game.
              </p>
            </div>
          </Segment>
        </TransitionablePortal>,
        <TransitionablePortal
          open={false}
          transition={
            Object {
              "animation": "scale",
              "duration": 400,
            }
          }
        >
          <Segment
            style={
              Object {
                "left": "42.5%",
                "position": "fixed",
                "textAlign": "center",
                "top": "40%",
                "zIndex": 1000,
              }
            }
          >
            <Header>
              <Icon
                as="i"
                name="game"
              />
              Draw game.
            </Header>
            <p>
              Why not play another round?
            </p>
            <p>
              Hit the reset button to play another game.
            </p>
          </Segment>
        </TransitionablePortal>,
      ],
      "id": "board-segment",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="row"
            >
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={0}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="top-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={1}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="top-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={2}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
            </div>,
            <div
              className="board-row"
            />,
            <div
              className="row"
              id="center-row"
            >
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={3}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="middle-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={4}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="middle-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={5}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
            </div>,
            <div
              className="board-row"
            />,
            <div
              className="row"
            >
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={6}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="bottom-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={7}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="bottom-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={8}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
            </div>,
          ],
          "id": "board",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={0}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
                <div
                  className="top-column"
                />,
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={1}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
                <div
                  className="top-column"
                />,
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={2}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 0,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "top-column",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 1,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "top-column",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 2,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "board-row",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={3}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
                <div
                  className="middle-column"
                />,
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={4}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
                <div
                  className="middle-column"
                />,
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={5}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
              ],
              "className": "row",
              "id": "center-row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 3,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "middle-column",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 4,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "middle-column",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 5,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "board-row",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={6}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
                <div
                  className="bottom-column"
                />,
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={7}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
                <div
                  className="bottom-column"
                />,
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={8}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />,
              ],
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 6,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "bottom-column",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 7,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "bottom-column",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "activePlayer": "playerX",
                  "clickMethod": [Function],
                  "gameId": null,
                  "index": 8,
                  "toggleActivePlayer": [Function],
                  "value": null,
                  "winner": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            as="button"
            color="green"
            onClick={[Function]}
            value="reset"
          >
            Start
          </Button>,
          "className": "button",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "button",
            "children": "Start",
            "color": "green",
            "onClick": [Function],
            "value": "reset",
          },
          "ref": null,
          "rendered": "Start",
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Segment
            style={
              Object {
                "left": "42.5%",
                "position": "fixed",
                "textAlign": "center",
                "top": "40%",
                "zIndex": 1000,
              }
            }
          >
            <Header>
              <Icon
                as="i"
                name="hand peace"
              />
              Strawberry
               wins!
            </Header>
            <div>
              <p>
                Why not play another round?
              </p>
              <p>
                Hit the reset button to play another game.
              </p>
            </div>
          </Segment>,
          "open": false,
          "transition": Object {
            "animation": "scale",
            "duration": 400,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Header>
                <Icon
                  as="i"
                  name="hand peace"
                />
                Strawberry
                 wins!
              </Header>,
              <div>
                <p>
                  Why not play another round?
                </p>
                <p>
                  Hit the reset button to play another game.
                </p>
              </div>,
            ],
            "style": Object {
              "left": "42.5%",
              "position": "fixed",
              "textAlign": "center",
              "top": "40%",
              "zIndex": 1000,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Icon
                    as="i"
                    name="hand peace"
                  />,
                  "Strawberry",
                  " wins!",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "hand peace",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Strawberry",
                " wins!",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p>
                    Why not play another round?
                  </p>,
                  <p>
                    Hit the reset button to play another game.
                  </p>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Why not play another round?",
                  },
                  "ref": null,
                  "rendered": "Why not play another round?",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Hit the reset button to play another game.",
                  },
                  "ref": null,
                  "rendered": "Hit the reset button to play another game.",
                  "type": "p",
                },
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Segment
            style={
              Object {
                "left": "42.5%",
                "position": "fixed",
                "textAlign": "center",
                "top": "40%",
                "zIndex": 1000,
              }
            }
          >
            <Header>
              <Icon
                as="i"
                name="game"
              />
              Draw game.
            </Header>
            <p>
              Why not play another round?
            </p>
            <p>
              Hit the reset button to play another game.
            </p>
          </Segment>,
          "open": false,
          "transition": Object {
            "animation": "scale",
            "duration": 400,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Header>
                <Icon
                  as="i"
                  name="game"
                />
                Draw game.
              </Header>,
              <p>
                Why not play another round?
              </p>,
              <p>
                Hit the reset button to play another game.
              </p>,
            ],
            "style": Object {
              "left": "42.5%",
              "position": "fixed",
              "textAlign": "center",
              "top": "40%",
              "zIndex": 1000,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <Icon
                    as="i"
                    name="game"
                  />,
                  "Draw game.",
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "game",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Draw game.",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Why not play another round?",
              },
              "ref": null,
              "rendered": "Why not play another round?",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hit the reset button to play another game.",
              },
              "ref": null,
              "rendered": "Hit the reset button to play another game.",
              "type": "p",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            id="board"
          >
            <div
              className="row"
            >
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={0}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="top-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={1}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="top-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={2}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
            </div>
            <div
              className="board-row"
            />
            <div
              className="row"
              id="center-row"
            >
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={3}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="middle-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={4}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="middle-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={5}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
            </div>
            <div
              className="board-row"
            />
            <div
              className="row"
            >
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={6}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="bottom-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={7}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
              <div
                className="bottom-column"
              />
              <Square
                activePlayer="playerX"
                clickMethod={[Function]}
                gameId={null}
                index={8}
                toggleActivePlayer={[Function]}
                value={null}
                winner={false}
              />
            </div>
          </div>,
          <div
            className="button"
          >
            <Button
              as="button"
              color="green"
              onClick={[Function]}
              value="reset"
            >
              Start
            </Button>
          </div>,
          <TransitionablePortal
            open={false}
            transition={
              Object {
                "animation": "scale",
                "duration": 400,
              }
            }
          >
            <Segment
              style={
                Object {
                  "left": "42.5%",
                  "position": "fixed",
                  "textAlign": "center",
                  "top": "40%",
                  "zIndex": 1000,
                }
              }
            >
              <Header>
                <Icon
                  as="i"
                  name="hand peace"
                />
                Strawberry
                 wins!
              </Header>
              <div>
                <p>
                  Why not play another round?
                </p>
                <p>
                  Hit the reset button to play another game.
                </p>
              </div>
            </Segment>
          </TransitionablePortal>,
          <TransitionablePortal
            open={false}
            transition={
              Object {
                "animation": "scale",
                "duration": 400,
              }
            }
          >
            <Segment
              style={
                Object {
                  "left": "42.5%",
                  "position": "fixed",
                  "textAlign": "center",
                  "top": "40%",
                  "zIndex": 1000,
                }
              }
            >
              <Header>
                <Icon
                  as="i"
                  name="game"
                />
                Draw game.
              </Header>
              <p>
                Why not play another round?
              </p>
              <p>
                Hit the reset button to play another game.
              </p>
            </Segment>
          </TransitionablePortal>,
        ],
        "id": "board-segment",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="row"
              >
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={0}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
                <div
                  className="top-column"
                />
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={1}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
                <div
                  className="top-column"
                />
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={2}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
              </div>,
              <div
                className="board-row"
              />,
              <div
                className="row"
                id="center-row"
              >
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={3}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
                <div
                  className="middle-column"
                />
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={4}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
                <div
                  className="middle-column"
                />
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={5}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
              </div>,
              <div
                className="board-row"
              />,
              <div
                className="row"
              >
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={6}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
                <div
                  className="bottom-column"
                />
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={7}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
                <div
                  className="bottom-column"
                />
                <Square
                  activePlayer="playerX"
                  clickMethod={[Function]}
                  gameId={null}
                  index={8}
                  toggleActivePlayer={[Function]}
                  value={null}
                  winner={false}
                />
              </div>,
            ],
            "id": "board",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={0}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                  <div
                    className="top-column"
                  />,
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={1}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                  <div
                    className="top-column"
                  />,
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={2}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 0,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "top-column",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 1,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "top-column",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 2,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "board-row",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={3}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                  <div
                    className="middle-column"
                  />,
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={4}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                  <div
                    className="middle-column"
                  />,
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={5}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                ],
                "className": "row",
                "id": "center-row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 3,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "middle-column",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 4,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "middle-column",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 5,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "board-row",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={6}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                  <div
                    className="bottom-column"
                  />,
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={7}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                  <div
                    className="bottom-column"
                  />,
                  <Square
                    activePlayer="playerX"
                    clickMethod={[Function]}
                    gameId={null}
                    index={8}
                    toggleActivePlayer={[Function]}
                    value={null}
                    winner={false}
                  />,
                ],
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 6,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "bottom-column",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 7,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "bottom-column",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activePlayer": "playerX",
                    "clickMethod": [Function],
                    "gameId": null,
                    "index": 8,
                    "toggleActivePlayer": [Function],
                    "value": null,
                    "winner": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              as="button"
              color="green"
              onClick={[Function]}
              value="reset"
            >
              Start
            </Button>,
            "className": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Start",
              "color": "green",
              "onClick": [Function],
              "value": "reset",
            },
            "ref": null,
            "rendered": "Start",
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Segment
              style={
                Object {
                  "left": "42.5%",
                  "position": "fixed",
                  "textAlign": "center",
                  "top": "40%",
                  "zIndex": 1000,
                }
              }
            >
              <Header>
                <Icon
                  as="i"
                  name="hand peace"
                />
                Strawberry
                 wins!
              </Header>
              <div>
                <p>
                  Why not play another round?
                </p>
                <p>
                  Hit the reset button to play another game.
                </p>
              </div>
            </Segment>,
            "open": false,
            "transition": Object {
              "animation": "scale",
              "duration": 400,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Header>
                  <Icon
                    as="i"
                    name="hand peace"
                  />
                  Strawberry
                   wins!
                </Header>,
                <div>
                  <p>
                    Why not play another round?
                  </p>
                  <p>
                    Hit the reset button to play another game.
                  </p>
                </div>,
              ],
              "style": Object {
                "left": "42.5%",
                "position": "fixed",
                "textAlign": "center",
                "top": "40%",
                "zIndex": 1000,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Icon
                      as="i"
                      name="hand peace"
                    />,
                    "Strawberry",
                    " wins!",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "name": "hand peace",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "Strawberry",
                  " wins!",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p>
                      Why not play another round?
                    </p>,
                    <p>
                      Hit the reset button to play another game.
                    </p>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Why not play another round?",
                    },
                    "ref": null,
                    "rendered": "Why not play another round?",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Hit the reset button to play another game.",
                    },
                    "ref": null,
                    "rendered": "Hit the reset button to play another game.",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Segment
              style={
                Object {
                  "left": "42.5%",
                  "position": "fixed",
                  "textAlign": "center",
                  "top": "40%",
                  "zIndex": 1000,
                }
              }
            >
              <Header>
                <Icon
                  as="i"
                  name="game"
                />
                Draw game.
              </Header>
              <p>
                Why not play another round?
              </p>
              <p>
                Hit the reset button to play another game.
              </p>
            </Segment>,
            "open": false,
            "transition": Object {
              "animation": "scale",
              "duration": 400,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Header>
                  <Icon
                    as="i"
                    name="game"
                  />
                  Draw game.
                </Header>,
                <p>
                  Why not play another round?
                </p>,
                <p>
                  Hit the reset button to play another game.
                </p>,
              ],
              "style": Object {
                "left": "42.5%",
                "position": "fixed",
                "textAlign": "center",
                "top": "40%",
                "zIndex": 1000,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Icon
                      as="i"
                      name="game"
                    />,
                    "Draw game.",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "i",
                      "name": "game",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "Draw game.",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Why not play another round?",
                },
                "ref": null,
                "rendered": "Why not play another round?",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Hit the reset button to play another game.",
                },
                "ref": null,
                "rendered": "Hit the reset button to play another game.",
                "type": "p",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
